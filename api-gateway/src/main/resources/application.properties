spring.application.name=api-gateway
server.port=5555
#zuul.routes.api-a-url.path=/api-a-url/**
#zuul.routes.api-a-url.url=http://localhost:8080
#服务路由配置
zuul.routes.api-a.path=/api-a/**
zuul.routes.api-a.service-id=hello-service
zuul.routes.api-b.path=/api-b/**
zuul.routes.api-b.service-id=feign-consumer
#上述可以简写为
#zuul.routes.feign-consumer=/api-b/**
eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka,http://peer2:1112/eureka


#传统路由配置
#如果没有使用eureka的服务发现功能，可以通下述配置设置多实例
# 该示例没有整合eureka，所以需要将该参数设置为false，否则配置的serviceId获取不到对应实例的清单
#ribbon.eureka.enabled=false
#feign-consumer.ribbon.listOfServers=http://localhost:8080

#设置不自动创建路由的规则
#zuul.ignored-services=*

#忽略表达式参数，该参数可以用来设置不希望被API网关进行路由的URL表达式
#zuul.ignored-patterns=/**/hello/**

#zuul在请求路由时会过滤http请求头信息中一些敏感信息，包括cookie、Set-Cookie、Authorization三个属性
#通过设置全局参数为空来覆盖默认值
#zuul.sensitive-headers=
#或者
#方法一：对指定路由开启自定义敏感头
#zuul.routes.<router>.custom-sensitive-headers=true
#方法二：将指定路由的敏感头设置为空
#zuul.routes.<router>.sensitive-headers.=

#zuul.addHostHeader=true

#关闭全局重试
#zuul.retryable=false
#关闭指定路由重试
#zuul.routes.<route>.retryable=false